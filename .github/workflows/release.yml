name: Release
on:
  release:
    types: [created]
  workflow_dispatch:
env:
  CFLAGS: -Werror
  tag: v1.8
jobs:
  pack-release:
    name: Package build artifacts
    runs-on: ubuntu-latest
    needs: [linux-build, arm-build, macos-build, macos-aarch64-build, win-cross-build]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: packages-contents/runtimes
      - name: Setup package folder structure
        run: |
          cd packages-contents/runtimes
          for d in */ ; do
            mkdir ${d}native ;
            mv ${d}libdeflate* ${d}native/ ;
          done
      - name: Pack
        run: dotnet pack -c Release -o pkg
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: LibDeflate.Native
          path: pkg/*

  linux-build:
    name: Build (linux:${{ matrix.os }}, ${{ matrix.arch }}, ${{ matrix.compiler }})
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc]
        arch: [x64,x86]
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.compiler }}
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib
    - name: Set arch options
      run: |
        case ${{ matrix.arch }} in
          x64)
            echo "CFLAGS=${{ env.CFLAGS }} -march=x86-64" >> $GITHUB_ENV
            ;;
          x86)
            echo "CFLAGS=${{ env.CFLAGS }} -march=i686 -m32 -fno-pic" >> $GITHUB_ENV
            ;;
        esac
    - name: Build libdeflate
      run: make -e libdeflate.so
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: linux-${{ matrix.arch }}
          path: libdeflate.so
  arm-build:
    name: Build (${{ matrix.rid }}, Debian Buster, ${{ matrix.compiler }})
    strategy:
      matrix:
        rid: [arm, arm64]
        compiler: [gcc]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout libdeflate
        with:
          repository: 'ebiggers/libdeflate'
          ref: ${{ env.tag }}
      - name: Set arch options
        run: |
          case ${{ matrix.rid }} in
            arm)
              echo "arch=armv7" >> $GITHUB_ENV
              ;;
            arm64)
              echo "arch=aarch64" >> $GITHUB_ENV
              ;;
          esac
      - uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: ${{ env.arch }}
          distro: buster
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y build-essential
          run: make CC=${{ matrix.compiler }} -e libdeflate.so
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
            name: linux-${{ matrix.rid }}
            path: libdeflate.so
  macos-build:
    name: Build (macOS, x86_64)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - run: make -e libdeflate.dylib
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: osx-x64
          path: libdeflate.dylib
  macos-aarch64-build:
    name: Build (macOS, aarch64)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - run: make -e libdeflate.dylib
      env:
        CFLAGS: -target arm64-apple-macos11
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: osx.11.0-arm64
          path: libdeflate.dylib
  win-cross-build:
    name: Build (Windows, cross-compile, x86/64, MinGW gcc)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 libz-mingw-w64-dev
    - name: 32-bit build
      run: make CC=i686-w64-mingw32-gcc -e libdeflate.dll
    - name: Upload 32-bit binaries
      uses: actions/upload-artifact@v2
      with:
          name: win-x86
          path: libdeflate.dll
    - name: 64-bit build
      run: make CC=x86_64-w64-mingw32-gcc -e libdeflate.dll
    - name: Upload 64-bit binaries
      uses: actions/upload-artifact@v2
      with:
          name: win-x64
          path: libdeflate.dll