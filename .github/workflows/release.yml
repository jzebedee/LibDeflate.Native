name: Release
on:
  release:
    types: [created]
  workflow_dispatch:
env:
  CFLAGS: -Werror
  tag: v1.8
jobs:
  linux-build:
    name: Build (linux:${{ matrix.os }}, ${{ matrix.arch }}, ${{ matrix.compiler }})
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc]
        arch: [x86-64,i686 -m32 -fno-pic]
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.compiler }}
      CFLAGS: -Werror -march=${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y clang llvm libz-dev valgrind gcc-multilib lib32z1-dev libc6-dbg:i386
    - name: Build libdeflate
      run: make -e libdeflate.so
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: libdeflate-linux-${{ matrix.arch }}
          path: libdeflate.so
  other-arch-build:
    name: Build and test (${{ matrix.arch }}, Debian Buster, ${{ matrix.compiler }})
    strategy:
      matrix:
        arch: [armv6, armv7, aarch64]
        compiler: [gcc]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout libdeflate
        with:
          repository: 'ebiggers/libdeflate'
          ref: ${{ env.tag }}
      - uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: ${{ matrix.arch }}
          distro: buster
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y build-essential clang llvm libz-dev valgrind
          run: make CC=${{ matrix.compiler }} -e libdeflate.so
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
            name: libdeflate-${{ matrix.arch }}-${{ matrix.compiler }}
            path: libdeflate.so
  macos-build:
    name: Build and test (macOS, x86_64)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - run: make -e libdeflate.dylib
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: libdeflate-macos-gcc
          path: libdeflate.dylib
  macos-aarch64-build:
    name: Build and test (macOS, aarch64)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - run: make -e libdeflate.dylib
      env:
        CFLAGS: -target arm64-apple-macos11
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
          name: libdeflate-macos-11-aarch64-gcc
          path: libdeflate.dylib
  cross-compile-for-windows:
    name: Cross compile for Windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout libdeflate
      with:
        repository: 'ebiggers/libdeflate'
        ref: ${{ env.tag }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 libz-mingw-w64-dev
    - name: 32-bit build
      run: make CC=i686-w64-mingw32-gcc -e libdeflate.dll
    - name: Upload 32-bit binaries
      uses: actions/upload-artifact@v2
      with:
          name: libdeflate-w32
          path: libdeflate.dll
    - name: 64-bit build
      run: make CC=x86_64-w64-mingw32-gcc -e libdeflate.dll
    - name: Upload 64-bit binaries
      uses: actions/upload-artifact@v2
      with:
          name: libdeflate-w64
          path: libdeflate.dll